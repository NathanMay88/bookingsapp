@model MyBookingsApp.Areas.App.Models.Management.RoomTypeViewModel


@using (Ajax.BeginForm("Edit", "RoomTypes", new { @area = "app", @id = Model.ID }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "CloseFancyBox" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container-fluid">
        <h4>@Model.Name</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="row">
            <div class="col-md-3">
                <h4>Room Type Details</h4>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MinPeople, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MinPeople, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MinPeople, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaxPeople, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxPeople, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaxPeople, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DefaultAllotment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DefaultAllotment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DefaultAllotment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TotalAllotment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TotalAllotment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalAllotment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <h4>Room Type Features</h4>
                <p>List of Room Features that this room type has, please select any that are available for all rooms</p>
                @for (int i = 0; i < Model.RoomOptions.Count; i++)
                {
                    <div class="form-group">
                        <p class="control-label col-md-2">@Model.RoomOptions[i].Description</p>
                        
                        @Html.HiddenFor(model => Model.RoomOptions[i].ID)
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.RoomOptions[i].Selected, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RoomOptions[i].Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

            </div>
            <div class="col-md-3">
                <h4>Room Type Images</h4>
                <p>Upload new images for the roomtype and manage the current collection of images.</p>
            </div>
        </div>
        <div class="d-flex flex-row-reverse">
                <div class="p-2">
                    <input type="submit" value="Save" class="btn btn-primary" />

                </div>
           
        </div>
    </div>

}
@using (Ajax.BeginForm("Delete", "RoomTypes", new { @area = "app", @id = Model.ID }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "CloseFancyBox" }))
{
    <div class="d-flex flex-row-reverse">
        <div class="p-2">
            <input type="submit" value="Delete" class="btn btn-danger" />
        </div>
    </div>
}
